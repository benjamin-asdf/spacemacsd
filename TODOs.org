* Resources
  - go through this
    - https://www.shellscript.sh/variables1.html
  - git-from-the-bottom-up
  - dired
  - registers
  - git manual
* Configs
- figure something out, so crontabs are nicely in git
  - banners:
    - create them with random figlet fonts
  - somehting in savehist becomes too big and doesn't get cleaned
  - fix env stuff somehow, can be temporary, because I won't use gnome forever
  - smartparens doesn't work inside snippets, little annoyance
  - emacs gitlab package, maybe a no brainer actually:
    - https://github.com/nlamirault/emacs-gitlab
* Goals
- learn about org
- minder project
- swith to a tiled window manager
* Quick
  - function to comment out all debug.logs in buffer
  - sxhkd + autoclick script
  - function copy-word-from-below
  - function to `dip` but leave 1 line
  - function to put curlies around if
  - function to delete the rest inside param syntax
* Things I would like to have
  - something to search whole project, basically fd with -I
  - or something to search design dir
  - Sailor:
    - "SearchActionHandler"
  - some script that uses ffmpeg and creates screencasts for me, fuck simple screen recorded
  - figure out how to trick rider, have a script for that
* bunel
  - fix symlink
    - save file hook, then move the file?
  - potentially: fuzzy gameobject select
  - selecting is easy: https://docs.unity3d.com/ScriptReference/Selection.html
  - but getting a list of hierachy objects for dmenu.. hm.
* Potential TODOS
  - configure a minimalist mode line
  - then it says something like "Launched a rocked."
* Try fix emacs x11 bug
  Sep 30 07:15:49 benj-pc emacs[4946]: Warning: due to a long standing Gtk+ bug
Sep 30 07:15:49 benj-pc emacs[4946]: https://gitlab.gnome.org/GNOME/gtk/issues/221
Sep 30 07:15:49 benj-pc emacs[4946]: Emacs might crash when run in daemon mode and the X11 connection is unexpectedly lost.
Sep 30 07:15:49 benj-pc emacs[4946]: Using an Emacs configured with --with-x-toolkit=lucid does not have this problem.
** install emacs with this option, man
   https://git.savannah.gnu.org/cgit/emacs.git/tree/INSTALL.REPO
*** build emacs
    - put the the new build into another dir
    - test if it works
    - then delete the old emacs installation and use the new one
    - cmon man this is easy
* minder
  - some minor mode where I can press a button repeatly
  - automatically push to private repo every 2 hours or something
  - merge timetrack and minder somehow
  - have functions that do the repetetive stuff for timetrack
  - add a user config hook
** merge minder and time track
  - these two functions are almost all I need?
  - well kinda for the beginning that would basically be good enough
*** func minder good morning
    - just push a special message with the wake up time so it's at the top of the file
    - ask "how long did you sleep?"
    - ask for additional message
*** func minder good night
    - would be nice to put the time awake automaticall

** bit bigger mine asteriod funcs
** add a minder hook for commiting,
    should be easy
    hook or this advice-add, whatever that is

* Need to fix
  - zsh path inside spacemacs is not correct
  - projectile submodules issue
  - fix zsh git auto completion (Guess it still has old version)

* potential memory fix:
  You could make a program that listens and kills duplicate processes
1 HR AGO
I use this to kill processes that take to much memory
1 HR AGO
#!/run/current-system/sw/bin/perl

use strict;
use warnings;
use Proc::ProcessTable;

my $processesFound = 0;
my $table = Proc::ProcessTable->new;

for my $process (@{$table->table}) {
    # skip root processes
    next if $process->uid == 0 or $process->gid == 0;

    # skip any using less than 4 GiB
    next if $process->rss < 4_294_967_296;

    # document the slaughter
		$processesFound = $processesFound + 1;
    (my $cmd = $process->cmndline) =~ s/\s+\z//;
    print "Killing process: pid=", $process->pid, " uid=", $process->uid, " rss=", $process->rss, " fname=", $process->fname, " cmndline=", $cmd, "\n";

    # try first to terminate process politely
    kill 15, $process->pid;

    # wait a little, then kill ruthlessly if it's still around
    sleep 5;
    kill 9, $process->pid;
}

my $date = localtime();
print "Killed ", $processesFound, " processes $date \n";
1 HR AGO
I run this in cron every minute
1 HR AGO
You could modify to check for vbs compiler and if theres a duplicate, kill the oldest one
* conky
* tmux
* emacs-roslyn-code-action program
  - man imagine shit like I give you a syntax tree of the visual selection
    - then it puts curlies around if blocks for example
* make rider work
** try with docker
*** milan notes
   it will look something like this for you
FROM <someLinuxDistro>  # have a look into dockerhub
WORKDIR = <someDir>
COPY = <yourProgram> to WORKDIR
CMD <execute program>
(edited)

it is just a sketch but you will need to copy your program there and run it if it is executable
if not you will put installation command there also (edited)
and one more thing which I haven't done you will
probably need to enable X if it is graphical app. I haven't done it, but it will be again some config in Dockerfile.
